{{yield}}
<!-- what is this yield element? -->

<h2>{{title}}</h2>


<h3>{{info}}</h3>

<ul>
  {{#each people as |person|}}
    <li {{action "showPerson" person}}>{{person.name}}</li>
    <iframe width="853" height="480" src={{person.src}} frameborder="0" allowfullscreen></iframe>



  {{/each}}
</ul>

<!-- <iframe width="853" height="480" src="https://www.youtube.com/embed/videoseries?list=PLZS_k6BQeW_KnXm44s7PORPsg3Hv6f3X5"frameborder="0" allowfullscreen></iframe>

<iframe width="853" height="480" src="https://www.youtube.com/embed/wUpRzyUrrlw" frameborder="0" allowfullscreen></iframe>


<iframe width="853" height="480" src="https://www.youtube.com/embed/videoseries?list=PLF3GWOzYkVR3HVr9dlKBjKp-hlU7ZeayJ" frameborder="0" allowfullscreen></iframe> -->


<!-- <div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an  (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'M7lc1UVf-VE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script> -->
